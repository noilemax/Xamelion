38 уровень
1. Гибкая_методология_разработки
2. Agile, Scrum, waterfall
3. иерархия исключений, errors
4. Задачи
	1. Исправь ошибки в коде
	2. Проверяемые исключения (checked exception)
	3. Непроверяемые исключения (unchecked exception)
5. throwable, multiple exceptions, эксепшн внутри метода finalize
6. Задачи
	1. Фабрика исключений
	2. Улучшения в Java 7 (multiple exceptions)
	3. Улучшения в Java 7 (try-with-resources)
7. Аннотации. Как пользоваться
8. Задачи
	1. Предопределенные типы аннотаций (Predefined Annotation Types)
	2. Неверные аннотации
9. Аннотации, как создавать
10. Задачи
	1. Annotation + Reflection
	2. Реализуй аннотации
37 уровень
1. Паттерны проектирования: Singleton, Factory, FactoryMethod, AbstractFactory
2. Паттерны: Adapter, Proxy, Bridge
3. Итераторы
4. Задачи
	1. Круговой итератор
	2. фАБРИКА
5. Иерархия Map
6. Задачи
	1. Найти класс по описанию
	2. Фикс бага
	3. Ambiguous behavior for NULL
7. Arrays
8.
9. Collections
10. Задачи
	1. Давно забытый Array
	2. Пишем коллекцию. Собственный Set. Класс позволяет вставку NULL.
36 уровень
1. MVC
2. Java Beans
3. Интерфейсы коллекций
4. Задачи
	1. MVC
5. Реализации интерфейса List
6. Задачи
	1. Найти класс по описанию
	2. Поиск класса по описанию
7. Деревья, красно-черные деревья
8. Задачи
	2. Использование TreeSet
	1. Разбираемся в красно-черном дереве
9. Реализации интерфейса Set, Queue
10. Задачи
	2. Найти класс по описанию
	1. Осваиваем ClassLoader и Reflection
35 уровень
1. Системы контроля версий
2. коммиты и ветки
3. Generics
4. Задачи
	1. Знакомство с дженериками
	2. Вызов статического метода
5. Generics: super, extends, list
6. Задачи
	1. Простой generics
	2. Несколько суперклассов для дженерика
7. Generics: Class<T>
8. Задачи
	1. Wildcards
	2. List to Map
9. Generics: ? wildcard
10. Задачи
	1. extends vs super
	2. ClassLoader - что это такое?
34 уровень
1. Рекурсия
2. Задачи
	1. Числа Фибоначчи с помощью рекурсии
	2. Факториал с помощью рекурсии
	3. Разложение на множители с помощью рекурсии
	4. Рекурсия для мат.выражения
3. Сборка мусора
4. Задачи
	1. Мягкие ссылки
5. weakReference
6. Задачи
	1. Слабые ссылки
7. phanotom Reference
8. Задачи
	1. Призрачные ссылки
	2. Кэширование
9. Logger
10. Задачи
	1. Настраиваем логгер
33 уровень
1. JavaScript
2. JSON
3. Сериализация в JSON
4. Json serialize frameworks
5. Задачи
	1. Первая сериализация в JSON
	2. Вторая сериализация в JSON
	3. Десериализация JSON объекта
	4. Конвертация из одного класса в другой используя JSON
	5. Определение имени класса
6. XML, Сериализация в XML
7. JAXB
8. Задачи
	1. Первая сериализация в XML
	2. Десериализация XML объекта
9. Сложная сериализация в XML, JAXB (вложенные классы и т.д.)
10. Задачи
	1. Создание класса по строке xml	
	2. Комментарий внутри xml
32 уровень
1. RandomAccessFile и т.д.
2. Задачи
	1. Запись в файл
3. StringReader, StringWriter
4. Задачи
	1. Пишем стек-трейс
	2. Читаем из потока
5. BufferedReader, BufferedWriter
6. Задачи
	1. Генератор паролей
7. DinamicProxy
8. Задачи
	1. Создание прокси-объекта
	2. Дженерики для создания прокси-объекта	
9. RMI
10. Задачи
	1. К серверу по RMI
15. Большая задача
	HTML редактор
31 уровень
1. File, Files, Path
2. Задачи на File
	1. Проход по дереву файлов
	2. Находим все файлы
3. Files, Path
4. Задачи на Files, Path
	1. Своя реализация
	2. Поиск скрытых файлов
5. FileInputStream, FileOutputStream, ZipOutputStream, ZipInputStream
6. Задачи
	1. Добавление файла в архив
	2. Разархивируем файл
	7. Reader, Writer
8. Задачи
	1. Null Object Pattern
	2. Исследуем Path
10. Задачи
	1. Читаем конфиги
15. Большая задача 
	1.Zip Архиватор
1. Null Object Pattern
30 уровень
1. 16-я система исчисления. 2 и 8 системы исчисления. Запись двоичного числа как 1000100В
2. Задачи по системам исчисления
	1. Осваиваем методы класса Integer
	2. Конвертер систем счислений
3. Числовые операторы
4. Задачи на числовые операторы
5. Логические операторы
6. Задачи на логические операторы
	1. Такие хитрые исключения!
	2. Fork/Join
7. Побитовые операторы (&, xor, <<,...)
8. Задачи на побитовые операторы
	1. Найдем число 2 в максимальной степени
	2. Swap по-новому
9. NaN, Infinity
10. Практическое применение (Битовые маски,...)
15. Большая задача
	1.Чат
29 уровень
1. NamingConventions, CodeConventions
2. Задачи на NamingConventions (исправить что-то, чтобы соответствовало стандарту)
3. Autoboxing (imutables)
4. Number (Integer Long, Byte)
5. Задачи на автобоксинг и числа
	1. И еще раз рефакторинг
	2. Особенности автобоксинга
6. Boolean
7. Задачи на автобоксинг Boolean
	1. Странные ошибки О_о
	2. Особенности автобоксинга - 2
8. Character
9. Задачи на автобоксинг Character
	1. Этот странный BigDecimal
	2. Кеширование
10. Void(пустота) и др.
15. Большая задача
	1.Рефакторинг (англ. refactoring) или реорганизация кода
28 уровень
1. switch, case, default
2. Задачи на switch
	1. Осваиваем switch
3. ThreadGroup - группы потоков
4. Задачи по ThreadGroup
	1. Пишем свою ThreadFactory
	2. ThreadLocalRandom
5. Приоритеты потоков
6. Задачи на приоритет нитей
	1. Magic class
	2. Приоритеты в Threads
7. ThreadPoolExecutor пул нитей
8. Задачи на пул потоков
	1. Знакомство с Executors
	2. Знакомство с ThreadPoolExecutor
9. Executor, ExecutorService, Callable
10. Задачи на Executor
	1. Осваиваем Callable
	2. Plants vs Zombies
15. Большая задача
	1. Aggregator/ Для начала возьмем http://hh.ua/ и http://hh.ru/, потом уже добавим другие сайты поиска работы.
27 уровень
1. Циклы (break и return, continue, метки)
2. Задачи на break & continue;
	1. Рефакторинг
	2. Нужный оператор
3. DeadLock, и его причины
4. Задачи по написанию своих дедлоков
	1. Создаем дедлок
	2. Второй вариант дедлока
	3. Модификаторы и дедлоки
5. Стратегии избегания DeadLock
6. Задачи по иправлению дедлоков
	1. Убираем deadLock
	2. Определяем порядок захвата монитора. Сложная.
	3. Убираем deadLock, используя Открытые вызовы
7. Стратегия "wait-notify-notifyAll"
8. Нюансы работы
9. Задачи на "wait-notify-notifyAll"
	1. CountDownLatch
	2. Producer–consumer
	3. Расставьте wait-notify
10. Другие детали синхронизации и многонитиевости
15. Большая задача
	1.Автоматизация работы в ресторане
26 уровень
1. Comparator, сортировка коллекций
2. Задачи на сортировку и comparator
	1. Почитать в инете про медиану выборки
	2. Был бы ум - будет и успех
	3. Убежденному убеждать других не трудно
3. Разделяемые ресурсы, Конфликты, Проблема совместного доступа
4. Применение volatile
5. Задачи по volatile
	1. Для того, чтобы усовершенствовать ум, надо больше размышлять, чем заучивать
	2. Трудолюбие - душа всякого дела и залог благосостояния
	3. Тот, кто любит труд, не нуждается в развлечениях
6. Мютекс и монитор
7. Применение synchronized
8. Сложные задачи на synchronized
	1. Вежливость - это искусственно созданное хорошее настроение
	2. Мудрый человек думает раз, прежде чем два раза сказать
	3. Распределение элементов по корзинам с собственным локом
9. Канкаренси, BlockingQueues (java7)
10. Задачи на канкаренси
	1. Весь мир играет комедию
	2. Мир скучен для скучных людей
	3. Мир не меняется, меняемся мы
15. Большая задача
	1.Банкомат
25 уровень
1. Enum, все особенности
2. Задачи на enum
	1. Новые возможности!
	2. Инициализируйте поле wheels, используя данные из loadWheelNamesFromDB.
	3. Свой enum
3. Thread Life Cyrcle, состояние объекта Thread
4. Все нюансы создания и запуска новой нити, демоны
5. Задачи на тему "текущее состояне нити"
	1. Switch для нитей
	2. Создай private class MyUncaughtExceptionHandler, который на перехват исключения должен 
6. Все нюансы прерывания/остановки нитей
7. Задачи на прерывание нитей
	1. Работать в поте лица!
	2. Не валять дурака
	3. Все не так легко, как кажется
8. Стек вызовов и перехват ошибок
9. Задачи на получение ошибок из нити
	1. Все исключения, которые возникают в процессе работы нити Solution
	2.Создайте свой UncaughtExceptionHandler в виде локального класса внутри конструктора.
	В классе Solution реализуйте интерфейс UncaughtExceptionHandler, который должен:
10. Другие методы класса Thread (sleep, yield...)
11. Задачи на yield, переуступку кванта времени
	1. Обеспечение отсутствия прерывания важной операции
	2. Первый закон Финэйгла: если эксперимент удался, что-то здесь не так...
16. Большая задача
	1. Space, SpaceShip, Ufo
24 уровень
1. Интерфейсы-маркеры, глубокое клонирование
2. Задачи на интерфейсы-маркеры
	1. Cloneable
	2. Так-с...сопоставим 
	3. Создание своего интерфейса-маркера
3. Наследование внутренних классов
4. Задачи на наследование внутренних классов
	1. Наследование от внутреннего класса
	2. Рефакторинг
	3. Blackbox
5. Локальные классы - классы внутри методов
6. Задачи на локальные классы
	1. Реализация интерфейса используя локальный класс
	2. Как избежать Copy+Paste
	3. Интернет-магазин продажи джинсов
7. Что происходит на самом деле (Во что превращаются классы компилятором)
8. Конструкторы/переменные анонимных иннер классов, final
9. Задачи на анонимные иннерклассы
	1. Вспомним наследование
	2. В методе sort написать компаратор для Stock: 
	3. Рефакторинг
14. Большая задача
	1.Арканоид
23 уровень
1. final и другие ключевые слова java
2. Задачи на final,...
	1. Запретите наследование
	2. Запретите переопределение
	3. Запретите создание экземпляров класса
3. Вложенные классы
4. Задачи по внутренним классам
	1. Inner
	2. Inner 2
	2. Inner 3
5. Внутренние статические классы
6. Задачи по внутренним статическим классам
	1. Как выбрать нужное?
	2. Рефакторинг
7. Внутренние анонимные классы, примеры
8. Задачи по анонимным классам
	1.Метод printName должен выводить свое собственное имя, т.е. "sout"
	2. Повторяем threads
	3. Анонимность иногда так приятна!
13. Большая задача
	1. Змейка
22 уровень
1. Что такое mutable/imutable объекты и зачем они
2. Перечисляю все классы, связанные со строками, и говорю, что делают они и все методы
3. Внутреннее устройство String, метод substring
4. Поиск, получение, удаление подстроки в String
5. Задачи на поиск/получение подстроки
	1. Найти подстроку
	2. Между табуляциями
	3. Нитиевые строки или строковые нити? Вот в чем вопрос.
6. String.format
7. Задачи на String.format
	1. Форматирование строки
	2. МНЕ нравится курс JavaRush
	3. Форматирование даты
8. StringBilder, StringBuffer
9. Задачи по StringBilder, StringBuffer
	1. Обращенные слова
	2. Формируем Where
	3. Составить цепочку слов
10. Character, кодировки
11. Регулярные выражения, примеры
12. StringTokinizer, String.replace, String.split
13. Задачи на StringTokinizer, String.replace
	1. StringTokenizer
	2. Смена кодировки
	3. Проверка номера телефона
18. Большая задача
	1. Тетрис
21 уровень
1. Приоритет операторов
2. Задачи на приоритет операторов
	1. Определяем адрес сети
	2. Сравниваем модификаторы
	3. Все гениальное - просто!
3. Все методы класса Object, метод toString()
4. Методы equals & hashCode: зачем, где используются, как работают
5. Задачи на equals & hashCode
	1. Equals and HashCode
	2. Исправить ошибку
	3. Ошибка в equals/hashCode
6. Знакомство с методами wait, notify, notifyAll
7. Метод clone, интерфейс Cloneable
8. Задачи на клонирование
	1. Глубокое клонирование карты
	2. Клонирование
	3. Запретить клонирование
9. Метод finalize, интерфейс closeable, try-with-resources(java7)
10. Задачи на освобождение занятых ресурсов
	1. Рефакторинг
	2. Освобождаем ресурсы
	3. Нюансы Exceptions
11. Метод getClass(), объект класс, знакомство с Reflection
16. Большая задача
	1. Ипподром
20 уровень
1. Нужно сохранить объект в файл - построчно. Сохранение массива объектов
2. Задача на сохранение массива объектов в файл
	1. Читаем и пишем в файл: Human
	2. Читаем и пишем в файл: JavaRush
	3. Знакомство с properties
	4. Читаем и пишем в файл статики
	5. И еще раз о синхронизации
3. Решение - сериализация, ISerializable
4. Задачи на сериализацию
	1. Как сериализовать?
	2. Как сериализовать JavaRush?
	3. Как сериализовать Singleton?
	4. Как сериализовать static?
	5. Как сериализовать что-то свое?
5. transient
6. Сохранение данных/externalizable
7. Задачи на сериализацию и десериализацию
	1. Externalizable для апартаментов
	2. OutputToConsole
	3. Externalizable Person
	4. Serializable Solution
	5. Переопределение сериализации
10. Домашние и бонусные задания
	1. Минимум изменений
	2. Десериализация
	3. Найти ошибки
	4. Исправить ошибку
	5. Сериализуйте Person
	6. Запрет сериализации
	7. Переопределение сериализации в потоке
	8. Правильный вывод
	9. Знакомство с графами
	1. Алгоритмы-числа
	2. Алгоритмы-прямоугольники
	3. Кроссворд
	4. Свой список
19 уровень
1. Концепция адаптера
2. Reader/Writer
3. Задачи на Reader/Writer
	1. TableAdapter
	2. Адаптер
	3. Адаптация нескольких интерфейсов
	4. И еще один адаптер
	5. Закрепляем адаптер
4. FileReader/FileWriter
5. Задачи на FileReader/FileWriter
	1. Четные байты
	2. Считаем слово
	3. Выделяем числа
	4. Замена знаков
	5. Пунктуация
6. BufferedReader/InputSreamReader
7. Пишем свой реадер - обертку на System.out
8. Задачи на потоки
	1. Ридер обертка
	2. Ридер обертка 2
	3. Выводим только цифры
	4. Решаем пример
	5. Дублируем текст
11. Домашние и бонусные задания
	1. Считаем зарплаты
	2. Самый богатый
	3. Хуан Хуанович
	4. Ищем нужные строки
	5. Слова с цифрами
	6. Замена чисел
	7. Длинные слова
	8. Перевертыши
	9. Контекстная реклама
	10. Исправить ошибку
	1. Отслеживаем изменения
	2. Свой FileWriter 
	3. Знакомство с тегами
18 уровень
1. Знакомство с потоками
2. FileInputStream, FileOutputStream
3. Задачи на FileInputStream, FileOutputStream
	1. Максимальный байт
	2. Минимальный байт
	3. Самые частые байты
	4. Самые редкие байты
	5. Сортировка байт
4. InputStream/OutputStream
5. Задачи на InputStream/OutputStream
	1. Исправить ошибки
	2. Подсчет запятых
	3. Разделение файла
	4. Реверс файла
	5. DownloadException
6. BufferedInputStream
7. Пишем свой поток - обертку на System.in
8. Задачи на потоки
	1. Wrapper (Decorator)
	2. Расширяем AmigoOutputStream
	3. AmigoOutputStream
	4. UnsupportedFileName
	5. Таблица
	
11. Домашние и бонусные задания
	1. Английские буквы
	2. Пробелы
	3. Два в одном
	4. Объединение файлов
	5. Округление чисел
	6. Встречаемость символов
	7. Поиск данных внутри файла
	8. Нити и байты
	9. Файлы и исключения
	10. Собираем файл
	1. Шифровка
	2. ПрайсыЗадача: CrUD
	3. Прайсы 2Задача: CrUD для таблицы внутри файла

17 уровень
1. Проблемы многопоточности: обращение к общему ресурсу
2. Задачи на общий ресурс - вывод в консоль..
	1. Заметки Класс Note будет использоваться нитями.
	2. Вместе быстрее? Ща проверим :)
3. synchronized
4. Задачи на synchronized
	1. Синхронизированные заметки
	2. Синхронизированные заметки 2
	3. Сад-огород
	4. Синхронизированный президент
	5. МВФ Singleton паттерн - синхронизация в методе
5. Кэш. проблема многопоточности - локальный кэш. volatile
6. Задачи на volatile
	1. Заметки для всех
	2. Предложения
7. yield - пропуск хода
10. Домашние и бонусные задания
	1. Общий список
	2. Comparable
	3. Аптека
	4. Синхронизированные методы
	5. Лишняя синхронизация
	6. Глажка
	7. ApplicationContext
	8. Банкомат
	9. Транзакционность
	10. Посчитаем
	1. CRUD
	2. CRUD 2
	3. Ресторан
16 уровень
1. Что такое многопоточность и зачем
2. Способы создания и запуска новых потоков
3. Задачи на потоки
	1. My first thread
	2. My second thread
	3. Список и нити
	4. Вывод стек-трейса
	5. Поговорим о музыке?
4. join- ожидание завершения потока
5. Задача на join
	1. join
	2. Horse Racing
	3. Продвижение на политических дебатах
	4. Справедливость
	5. Расставь вызовы методов join()
6. sleep-спать
7. Задачи на sleep
	1. Часы
	2. Stopwatch (Секундомер)
	3. Big Ben clock
	4. Обратный отсчет
	5. Аэропорт	
8. Наша версия остановки потока
9. interrupt, IsInterrupted, interrupted exception
10. Задача на interrupt
	1. Считаем секунды
	2. Отсчет на гонках
	3. Снова interrupt
	4. А без interrupt слабо?
	5. Один для всех, все - для одного
13. Домашние и бонусные задания
	1. Thread.currentThread - всегда возвращает текущую нить
	2. Последовательные выполнения нитей
	3. Рекурсивное создание нитей
	4. Последовательные выполнения нитей
	5. Взаимная блокировка
	6. Создание по образцу
	7. Поиграем?
	8. Кто первый встал - того и тапки
	9. Только по-очереди!
	10. Последовательный вывод файлов
	1. Factory method pattern
	2. Клубок
	3. Отдебажим все на свете
	
15уровень
1. Переопределение методов, реализация абстрактных методов и интерфейсов..
2. Задачи	
	1. Расставить интерфейсы
	2. ООП - наследование животных
	3. ООП - машинки
	4. ООП - книги
	5. ООП - исправь ошибки в наследовании
3. Перегрузка методов
4. Задачи
	1. Что-то лишнее
	2. ООП - Перегрузка
	3. ООП - Перегрузка - убираем лишнее
	4. Мужчина или женщина?
5. Все лишнее - прочь!
5. Создание объекта. Порядок вызова конструкторов
6. Задачи
	1. Максимально простой код 1
	2. Максимально простой код 2
	3. Максимально простой код 3	
7. Порядок загрузки классов, статические данные...
8. Порядок инициализации переменных
9. Задачи на порядок инициализации переменных
	1. Статики 1
	2. Статики 2
	3. Статики 3
	4. Статики и исключения
	5. Статики 4
12. Домашние и бонусные задания
	1. Разные методы для разных типов
	2. Тренировка мозга
	3. ООП - перегрузка
	4. Закрепляем Singleton pattern
	5. Перегрузка конструкторов
	6. Порядок загрузки переменных
	7. Файл в статическом блоке
	8. Дебаг, дебаг, и еще раз дебаг
	9. Парсер реквестов
	10. ООП - наследование
	1. Осваивание статического блока
	2. Template pattern
	3. Факториал
14 уровень
1. instanceof - что это такое и зачем нужно
2. Задачи на instanceof
	1. Bingo
	2. Bingo-2
3. Приведение типов. Расширение и сужение
4. Задачи на приведение типов
	1. Building и School
	2. Коты
	3. Food
	4. Без ошибок
	5. Player and Dancer
6. Домашние и бонусные задания
	Куриная фабрика
8. Домашние и бонусные задания
	1. Мосты.
	2. Дегустация вин.
	3. User, Looser, Coder and Proger.
	4. Реализовать метод printMainInfo.
	5. Computer.
	6. MovieFactory.
	7. Клининговый центр.
	8. Исправление ошибок.
	9. Валюты.
	10. Исправить 4 ошибки.
	1. Нашествие эксепшенов. 
	2. НОД.
	3. Singleton.
13 уровень
1. Причины существования интерфейсов - поддержка заявленного поведения
2. Задачи на интерфейсы
3. Абстрактные классы
4. Задачи на абстрактные классы
	1. Переводчик с английского
	2. Исправление кода
	3. Интерфейс Animal
	4. Класс BigFox
5. Множественное наследование интерфейсов
6. Задачи на абстрактные классы
	Dog, Cat и Mouse
7. Абстрактный класс vs. интерфейс
8. Стандартные интерфейсы: InputStream, OutputStream
11. Домашние и бонусные задания
	1. Некорректные строки
	2. Погода
	3. Чтение файла
	4. Запись в файл
	5. Neo
	6. Исправление ошибок
	7. Интерфейс SimpleObject
	8. Интерфейс Updatable в классе Screen
	9. Один метод в классе
	10. Компиляция программы
	1. Сортировка четных чисел из файла.
	2. Сказка Репка.
	3. Битва роботов.
12 уровень
1. Полиморфизм и переопределение
2. Задачи на полиморфизм
3. Перегрузка методов
4. Задачи на перегрузку методов
	1. print(int) и print(String)
	2. print(int) и print(Integer)
	3. Пять методов print с разными параметрами
	4. Три метода возвращают минимальное из двух переданных в него чисел
	5. Три метода возвращают максимальное из двух переданных в него чисел
5. Абстрактные классы
6. Задачи на абстрактные классы
7. Интерфейсы
8. Интерфейсы - это больше чем интерфейсы - это поведение
9. Задачи на интерфейсы
	1. Интерфейс Fly
	2. Интерфейсы Fly, Run, Swim
	3. Fly, Move, Eat для классов Dog, Car, Duck, Airplane
	4. Fly, Run, Swim для классов Human, Duck, Penguin, Airplane
	5. Класс Human и интерфейсы Run, Swim	
11 уровень
1. ООП - основные принципы
2. Причины появления ООП
3. Еще одно объяснение ООП (слабая связность, четкие функции)
5. Наследование. Преимущество наследования
6. Задачи на наследование
7. Инкапсуляция. Преимущество инкапсуляции
8. Задачи на инкапсуляцию
11. Домашние и бонусные задания
10 уровень
1. Рассказ про жёсткую типизацию объектов
2. Список базовых типов
3. Преобразование типов. Расширение и сужение типов.
4. Задачи на преобразование целых типов
5. Преобразование к типу String
6. Задание на преобразование типов
7. Вещественные типы
8. Литералы
11. Домашние задания
9 уровень
1. Стек трейс
2. Задачи на вывод стек-трейса
3. Знакомство с исключениями
4. RuntimeException, throw
5. Раскрутка стека вызовов, как это идёт при исключениях
6. Задача на захват исключений
7. Как работает множественный catch
8. Задачи на захват множественных исключений
8 уровень
1. Объяснение основных коллекций
2. Список всех коллекций и интерфейсов
3. Задачи по коллекциям
4. Знакомимся с типом Date
5. ArrayList vs. LinkedList
6. Задача: померить производительность обоих списков
7. Set, Map, что можно с ними делать
8. Задачи на Set & Map
7 уровень
1. Массивы, null
2. Особенность устройства массивов в памяти
3. Примеры использования массивов Array
4. Задачи на создание и использование массивов
5. ArrayList, отличие от Array
6. Задачи по ArrayList
7. Generics
8. Примеры по ArrayList и Generics
9. Задачи по List<T>
6 уровень
5 уровень
4 уровень
3 уровень
2 уровень
1 уровень


